#version 400

uniform mat4 LocalToWorldTransform;
uniform mat4 WorldToScreenTransform;
uniform mat4 LocalToScreenTransform;

uniform vec4 Color;

layout(location = 0) in vec4 vertexPosition;
layout(location = 1) in vec3 vertexNormal;

out vec3 lightIntensity;

void main()
{ 

    vec4 lightPos = vec4(10.0f,10.0f,10.0f,1.0f);
	
	mat4 WorldToLocal = inverse(LocalToWorldTransform);

	vec3 normalDirection = normalize(vec3(vec4(vertexNormal, 0.0f) * WorldToLocal));

	vec3 lightDirection = normalize(vec3(lightPos));

	vec3 diffuseReflection = vec3(Color) * vec3(1.0f,1.0f,1.0f) * max(0.0, dot(normalDirection, lightDirection));

	lightIntensity = diffuseReflection;
	gl_Position = LocalToScreenTransform * vertexPosition;

	
}
